{
  "_args": [
    [
      {
        "raw": "travis-after-all@1.4.3",
        "scope": null,
        "escapedName": "travis-after-all",
        "name": "travis-after-all",
        "rawSpec": "1.4.3",
        "spec": "1.4.3",
        "type": "version"
      },
      "/home/travis/build/Modernizr/Modernizr/node_modules/@alrra/travis-scripts"
    ]
  ],
  "_from": "travis-after-all@1.4.3",
  "_id": "travis-after-all@1.4.3",
  "_inCache": true,
  "_location": "/travis-after-all",
  "_nodeVersion": "4.1.0",
  "_npmUser": {
    "name": "alrra",
    "email": "alrraa@gmail.com"
  },
  "_npmVersion": "3.3.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "travis-after-all@1.4.3",
    "scope": null,
    "escapedName": "travis-after-all",
    "name": "travis-after-all",
    "rawSpec": "1.4.3",
    "spec": "1.4.3",
    "type": "version"
  },
  "_requiredBy": [
    "/@alrra/travis-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/travis-after-all/-/travis-after-all-1.4.3.tgz",
  "_shasum": "fa6289e65dedc11bb791d93282d998bd5ea550b3",
  "_shrinkwrap": null,
  "_spec": "travis-after-all@1.4.3",
  "_where": "/home/travis/build/Modernizr/Modernizr/node_modules/@alrra/travis-scripts",
  "author": {
    "name": "Cătălin Mariș",
    "email": "alrraa@gmail.com",
    "url": "http://catalinmaris.com/"
  },
  "babel": {
    "modules": "common",
    "optional": [
      "es7.asyncFunctions",
      "runtime"
    ]
  },
  "bin": {
    "travis-after-all": "bin/travis-after-all"
  },
  "bugs": {
    "url": "https://github.com/alrra/travis-after-all/issues"
  },
  "config": {
    "keys": {
      "failure": "travis-after-all: failed",
      "success": "travis-after-all: succeeded"
    },
    "test-branch-prefix": "test-build"
  },
  "dependencies": {},
  "description": "Script that can help you execute code only once in a Travis CI build matrix",
  "devDependencies": {
    "babel": "^5.6.4",
    "babel-core": "^5.6.4",
    "babel-runtime": "^5.6.4",
    "glob": "^5.0.14",
    "tap": "^1.3.2",
    "tap-mocha-reporter": "0.0.16"
  },
  "directories": {},
  "dist": {
    "shasum": "fa6289e65dedc11bb791d93282d998bd5ea550b3",
    "tarball": "https://registry.npmjs.org/travis-after-all/-/travis-after-all-1.4.3.tgz"
  },
  "gitHead": "a2442fc7b3d6153acdf01ed098623895b69bd5bd",
  "homepage": "https://github.com/alrra/travis-after-all#readme",
  "keywords": [
    "travis",
    "travis-ci"
  ],
  "license": "MIT",
  "main": "lib/travis-after-all.js",
  "maintainers": [
    {
      "name": "alrra",
      "email": "alrraa@gmail.com"
    }
  ],
  "name": "travis-after-all",
  "optionalDependencies": {},
  "readme": "# travis-after-all\n\n[![Build Status](https://travis-ci.org/alrra/travis-after-all.svg?branch=master)](https://travis-ci.org/alrra/travis-after-all)\n[![devDependency Status](https://david-dm.org/alrra/travis-after-all/dev-status.svg)](https://david-dm.org/alrra/travis-after-all#info=devDependencies)\n\n`travis-after-all` is a script that can help you execute code only once\nin a [build matrix](http://docs.travis-ci.com/user/customizing-the-build/#Build-Matrix)\nbased on whether the build has succeeded or failed.\n\nOr to put it in another way, `travis-after-all` is basically a temporary\nworkaround for: [`travis-ci/travis-ci#929`](https://github.com/travis-ci/travis-ci/issues/929).\n\n\n## Usage\n\n__[1]__ Include the command that executes the `travis-after-all` script\ninside [`after_script`](http://docs.travis-ci.com/user/customizing-the-build/#The-Build-Lifecycle)\n(or inside of a script that is included inside `after_script`).\n\n__[2]__ Based on the (exit) code returned by `travis-after-all`, run\nyour custom code.\n\nSee [examples](#usage-examples).\n\n--\n\nTerminology:\n\n* A __job passed__ if either the tests passed, or the tests failed,\n  but the job was [allowed to fail](http://docs.travis-ci.com/user/customizing-the-build/#Rows-that-are-Allowed-To-Fail).\n\n* A __build succeeded__ if all jobs passed and there is at least one\n  job who's tests passed.\n\n* A __build failed__ if there is at least one job that didn't pass,\n  or if all jobs passed, but for all of them the tests failed.\n\n--\n\nMeaning of (exit) codes:\n\n* `0` - is returned to the job that was assigned to run the code if\n  the __build succeeded__\n\n* `1` - is returned to the job that was assigned to run the code if\n  the __build failed__\n\n* `2` - is returned to the jobs that where not assigned to do anything\n\n* `3` - is returned if something went wrong (e.g.: `travis-after-all`\n  failed to connect to Travis CI's API)\n\n\n## Usage examples\n\n### Using `npm`\n\nInstall `travis-after-all` as a `devDependency`.\n\n ```bash\nnpm install --save-dev travis-after-all\n```\n\nThen, in your `.travis.yml` file, add:\n\n```bash\n\n# ...\n\nafter_script:\n  - |\n\n      declare exitCode;\n\n\n      # -- [1] -------------------------------------------------------\n\n      $(npm bin)/travis-after-all\n      exitCode=$?\n\n\n      # -- [2] -------------------------------------------------------\n\n      if [ $exitCode -eq 0 ]; then\n        # Here goes the code that needs to be executed if the build succeeded\n      fi\n\n      if [ $exitCode -eq 1 ]; then\n        # Here goes the code that needs to be executed if the build failed\n      fi\n\n\n# ...\n\n```\n\nYou can also run `travis-after-all` from within your `node` script,\ne.g.:\n\n```js\nvar travisAfterAll = require('travis-after-all');\n\nfunction callback(code, error) {\n\n    if ( error !== undefined ) {\n       // ...\n    } else {\n\n        if ( code === 0 ) {\n          // Here goes the code that needs to be executed if the build succeeded\n        } else if ( code === 1) {\n          // Here goes the code that needs to be executed if the build failed\n        }\n\n    }\n\n}\n\ntravisAfterAll(callback);\n```\n\n### General usage\n\n:warning: If your using this method, please try to keep up with the\nreleases and update the version number once a new version is released.\n\nIn your `.travis.yml` file add:\n\n```bash\n\n# ...\n\nafter_script:\n  - |\n\n      declare exitCode\n\n\n      # -- [1] -------------------------------------------------------\n\n      curl -sSL https://raw.githubusercontent.com/alrra/travis-after-all/1.4.3/lib/travis-after-all.js | node\n      exitCode=$?\n\n\n      # -- [2] -------------------------------------------------------\n\n      if [ $exitCode -eq 0 ]; then\n        # Here goes the code that needs to be executed if the build succeeded\n      fi\n\n      if [ $exitCode -eq 1 ]; then\n        # Here goes the code that needs to be executed if the build failed\n      fi\n\n# ...\n\n```\n\n__Note:__ `travis-after-all` is written in JavaScript, however, since\nTravis [includes the Node runtime by default](http://docs.travis-ci.com/user/ci-environment/#Runtimes),\nit can be use no matter what [build environment](http://docs.travis-ci.com/user/ci-environment/)\nyou have.\n\n\n## License\n\nThe code is available under the [MIT license](LICENSE.txt).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alrra/travis-after-all.git"
  },
  "scripts": {
    "pretest": "rm -rf dist_test && babel test --out-dir dist_test",
    "test": "node dist_test/main.js | tap-mocha-reporter spec"
  },
  "version": "1.4.3"
}
